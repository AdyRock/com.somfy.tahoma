'use strict';var cov_bdnybz5yz=function(){var path="/Users/lennart.kuijs/Documents/Dev/com.somfy.tahoma/drivers/io_light_sensor/device.js",hash="4827008188798ac796b7a9de0d254db019c98cc5",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/lennart.kuijs/Documents/Dev/com.somfy.tahoma/drivers/io_light_sensor/device.js",statementMap:{"0":{start:{line:3,column:21},end:{line:3,column:47}},"1":{start:{line:4,column:15},end:{line:4,column:42}},"2":{start:{line:5,column:22},end:{line:5,column:57}},"3":{start:{line:6,column:21},end:{line:6,column:55}},"4":{start:{line:15,column:4},end:{line:15,column:103}},"5":{start:{line:17,column:5},end:{line:17,column:20}},"6":{start:{line:21,column:25},end:{line:21,column:58}},"7":{start:{line:22,column:4},end:{line:39,column:5}},"8":{start:{line:23,column:6},end:{line:23,column:58}},"9":{start:{line:25,column:21},end:{line:25,column:25}},"10":{start:{line:26,column:21},end:{line:28,column:7}},"11":{start:{line:30,column:21},end:{line:32,column:7}},"12":{start:{line:35,column:6},end:{line:38,column:56}},"13":{start:{line:41,column:4},end:{line:41,column:29}},"14":{start:{line:49,column:19},end:{line:49,column:80}},"15":{start:{line:50,column:4},end:{line:53,column:5}},"16":{start:{line:51,column:6},end:{line:51,column:32}},"17":{start:{line:52,column:6},end:{line:52,column:13}},"18":{start:{line:55,column:18},end:{line:55,column:32}},"19":{start:{line:56,column:15},end:{line:56,column:25}},"20":{start:{line:57,column:17},end:{line:57,column:27}},"21":{start:{line:59,column:4},end:{line:69,column:9}},"22":{start:{line:62,column:8},end:{line:65,column:9}},"23":{start:{line:63,column:28},end:{line:63,column:77}},"24":{start:{line:64,column:10},end:{line:64,column:69}},"25":{start:{line:68,column:8},end:{line:68,column:48}},"26":{start:{line:73,column:0},end:{line:73,column:35}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:14,column:2},end:{line:14,column:3}},loc:{start:{line:14,column:11},end:{line:18,column:3}},line:14},"1":{name:"(anonymous_1)",decl:{start:{line:20,column:2},end:{line:20,column:3}},loc:{start:{line:20,column:38},end:{line:42,column:3}},line:20},"2":{name:"(anonymous_2)",decl:{start:{line:48,column:2},end:{line:48,column:3}},loc:{start:{line:48,column:13},end:{line:70,column:3}},line:48},"3":{name:"(anonymous_3)",decl:{start:{line:60,column:12},end:{line:60,column:13}},loc:{start:{line:60,column:20},end:{line:66,column:7}},line:60},"4":{name:"(anonymous_4)",decl:{start:{line:67,column:13},end:{line:67,column:14}},loc:{start:{line:67,column:22},end:{line:69,column:7}},line:67}},branchMap:{"0":{loc:{start:{line:22,column:4},end:{line:39,column:5}},type:"if",locations:[{start:{line:22,column:4},end:{line:39,column:5}},{start:{line:22,column:4},end:{line:39,column:5}}],line:22},"1":{loc:{start:{line:50,column:4},end:{line:53,column:5}},type:"if",locations:[{start:{line:50,column:4},end:{line:53,column:5}},{start:{line:50,column:4},end:{line:53,column:5}}],line:50},"2":{loc:{start:{line:62,column:8},end:{line:65,column:9}},type:"if",locations:[{start:{line:62,column:8},end:{line:65,column:9}},{start:{line:62,column:8},end:{line:65,column:9}}],line:62},"3":{loc:{start:{line:62,column:12},end:{line:62,column:63}},type:"binary-expr",locations:[{start:{line:62,column:12},end:{line:62,column:30}},{start:{line:62,column:34},end:{line:62,column:63}}],line:62}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0]},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const SensorDevice=(cov_bdnybz5yz.s[0]++,require('../SensorDevice'));const Tahoma=(cov_bdnybz5yz.s[1]++,require('../../lib/Tahoma'));const genericHelper=(cov_bdnybz5yz.s[2]++,require('../../lib/helper').Generic);const deviceHelper=(cov_bdnybz5yz.s[3]++,require('../../lib/helper').Device);/**
 * Device class for the light sensor with the io:LightIOSystemSensor controllable name in TaHoma
 * @extends {SensorDevice}
 */class LightSensorDevice extends SensorDevice{onInit(){cov_bdnybz5yz.f[0]++;cov_bdnybz5yz.s[4]++;this.registerCapabilityListener('measure_luminance',this.onCapabilityMeasureLuminance.bind(this));cov_bdnybz5yz.s[5]++;super.onInit();}onCapabilityMeasureLuminance(value){cov_bdnybz5yz.f[1]++;const oldLuminance=(cov_bdnybz5yz.s[6]++,this.getState().measure_luminance);cov_bdnybz5yz.s[7]++;if(oldLuminance!==value){cov_bdnybz5yz.b[0][0]++;cov_bdnybz5yz.s[8]++;this.setCapabilityValue('measure_luminance',value);const device=(cov_bdnybz5yz.s[9]++,this);const tokens=(cov_bdnybz5yz.s[10]++,{'luminance':value});const state=(cov_bdnybz5yz.s[11]++,{'measure_luminance':value});//trigger flows
cov_bdnybz5yz.s[12]++;this.getDriver().triggerLuminanceMoreThan(device,tokens,state).triggerLuminanceLessThan(device,tokens,state).triggerLuminanceBetween(device,tokens,state);}else{cov_bdnybz5yz.b[0][1]++;}cov_bdnybz5yz.s[13]++;return Promise.resolve();}/**
	 * Gets the sensor data from the TaHoma cloud
	 * @param {Array} data - device data from all the devices in the TaHoma cloud
	 */sync(data){cov_bdnybz5yz.f[2]++;const device=(cov_bdnybz5yz.s[14]++,data.find(deviceHelper.isSameDevice(this.getData().id),this));cov_bdnybz5yz.s[15]++;if(!device){cov_bdnybz5yz.b[1][0]++;cov_bdnybz5yz.s[16]++;this.setUnavailable(null);cov_bdnybz5yz.s[17]++;return;}else{cov_bdnybz5yz.b[1][1]++;}const range=(cov_bdnybz5yz.s[18]++,15*60*1000);//range of 15 minutes
const to=(cov_bdnybz5yz.s[19]++,Date.now());const from=(cov_bdnybz5yz.s[20]++,to-range);cov_bdnybz5yz.s[21]++;Tahoma.getDeviceStateHistory(this.getDeviceUrl(),'core:LuminanceState',from,to).then(data=>{cov_bdnybz5yz.f[3]++;cov_bdnybz5yz.s[22]++;//process result
if((cov_bdnybz5yz.b[3][0]++,data.historyValues)&&(cov_bdnybz5yz.b[3][1]++,data.historyValues.length>0)){cov_bdnybz5yz.b[2][0]++;const{value}=(cov_bdnybz5yz.s[23]++,genericHelper.getLastItemFrom(data.historyValues));cov_bdnybz5yz.s[24]++;this.triggerCapabilityListener('measure_luminance',value);}else{cov_bdnybz5yz.b[2][1]++;}}).catch(error=>{cov_bdnybz5yz.f[4]++;cov_bdnybz5yz.s[25]++;console.log(error.message,error.stack);});}}cov_bdnybz5yz.s[26]++;module.exports=LightSensorDevice;
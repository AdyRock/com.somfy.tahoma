'use strict';var cov_28mfqjaqln=function(){var path="/Users/lennart.kuijs/Documents/Dev/com.somfy.tahoma/drivers/io_opening_detector/device.spec.js",hash="692f58f2c29411f91c4f64e00f64a165931b4967",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/lennart.kuijs/Documents/Dev/com.somfy.tahoma/drivers/io_opening_detector/device.spec.js",statementMap:{"0":{start:{line:3,column:15},end:{line:3,column:37}},"1":{start:{line:4,column:13},end:{line:4,column:36}},"2":{start:{line:6,column:14},end:{line:6,column:50}},"3":{start:{line:7,column:0},end:{line:7,column:21}},"4":{start:{line:9,column:15},end:{line:9,column:34}},"5":{start:{line:11,column:0},end:{line:21,column:3}},"6":{start:{line:12,column:17},end:{line:12,column:29}},"7":{start:{line:14,column:2},end:{line:16,column:5}},"8":{start:{line:15,column:4},end:{line:15,column:64}},"9":{start:{line:18,column:2},end:{line:20,column:5}},"10":{start:{line:19,column:4},end:{line:19,column:49}},"11":{start:{line:19,column:17},end:{line:19,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:34},end:{line:11,column:35}},loc:{start:{line:11,column:45},end:{line:21,column:1}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:14,column:42},end:{line:14,column:43}},loc:{start:{line:14,column:53},end:{line:16,column:3}},line:14},"2":{name:"(anonymous_2)",decl:{start:{line:18,column:43},end:{line:18,column:44}},loc:{start:{line:18,column:54},end:{line:20,column:3}},line:18},"3":{name:"(anonymous_3)",decl:{start:{line:19,column:11},end:{line:19,column:12}},loc:{start:{line:19,column:17},end:{line:19,column:32}},line:19}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},f:{"0":0,"1":0,"2":0,"3":0},b:{},_coverageSchema:"43e27e138ebf9cfc5966b082cf9a028302ed4184"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const expect=(cov_28mfqjaqln.s[0]++,require('chai').expect);const mock=(cov_28mfqjaqln.s[1]++,require('mock-require'));const Homey=(cov_28mfqjaqln.s[2]++,require('../../lib/test/homey-mock'));cov_28mfqjaqln.s[3]++;mock('homey',Homey);const Device=(cov_28mfqjaqln.s[4]++,require('./device'));cov_28mfqjaqln.s[5]++;describe('OpeningDetectorDevice',function(){cov_28mfqjaqln.f[0]++;const device=(cov_28mfqjaqln.s[6]++,new Device());cov_28mfqjaqln.s[7]++;it('should have a capability listener',function(){cov_28mfqjaqln.f[1]++;cov_28mfqjaqln.s[8]++;expect(device.onCapabilityAlarmContact).to.be.a('function');});cov_28mfqjaqln.s[9]++;it('should implement the sync() method',function(){cov_28mfqjaqln.f[2]++;cov_28mfqjaqln.s[10]++;expect(()=>{cov_28mfqjaqln.f[3]++;cov_28mfqjaqln.s[11]++;return device.sync([]);}).to.not.throw();});});